@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <AuthorizeView>
        @if (name == null)
        {
            <div class='spinner'>
                <div class='dot'></div>
                <div class='dot'></div>
                <div class='dot'></div>
            </div>
            <svg>
                <defs>
                    <filter id='goo'>
                        <feGaussianBlur in='SourceGraphic' stdDeviation='8' result='blur' />
                        <feColorMatrix in='blur' mode='matrix' values='
                      1 0 0 0 0
                      0 1 0 0 0
                      0 0 1 0 0
                      0 0 0 50 -8' result='goo' />
                        <feBlend in='SourceGraphic' in2='goo' />
                    </filter>
                </defs>
            </svg>
        }
        else
        {
            @if (name == "Shermatov")
            {
                <div class="BlackText">Добро пожаловать, Кирилл</div>
            }
            else
            {
                <div class="BlackText">Добро пожаловать, @name</div>
            }
            
        }
    </AuthorizeView>
</CascadingAuthenticationState>
@code{
    public string name { get; set; } = null;
    protected override async Task OnInitializedAsync() => await Task.Run(Load);

    /// <summary>
    /// Загрузка и форматирование имени пользователя
    /// </summary>
    private async void Load()
    {
        Task<AuthenticationState> authState = AuthenticationStateProvider.GetAuthenticationStateAsync();
        string user = authState.Result.User.Identity.Name.Remove(0, 8);
        name = user.Substring(0, 1).ToUpper() + user.Substring(1, user.Length - 1);        
    }    
}